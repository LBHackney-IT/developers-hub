{"ast":null,"code":"var _jsxFileName = \"/Users/lbasiu/Documents/Repos/developers-hub-frontend/src/pages/login/login.page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport FormInput from \"../../components/form-input/form-input.component.jsx\";\nimport UserContext from \"../../context/user.context.js\";\nimport Button from \"../../components/button/button.component.jsx\";\nimport { withRouter } from \"react-router-dom\";\nimport APP_PATHS from \"../../APP_PATHS.js\";\nimport { SOCKET_ADDRESS } from \"../../APP_CONFIG.js\";\nimport withoutLogin from \"../../HOCs/without-login.hoc.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = ({\n  history,\n  currentUser: user\n}) => {\n  _s();\n\n  //if (user) history.push(APP_PATHS.home);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  async function postData(url = '', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: data // body data type must match \"Content-Type\" header\n\n    });\n    const responseData = await response.text(); // parses JSON response into native JavaScript objects\n\n    return responseData;\n  }\n\n  const [currentUser, setCurrentUser] = useState(user);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const emailInput = document.querySelector(\"#login-email\");\n    const passwordInput = document.querySelector(\"#login-pass\");\n    const jsonData = {\n      email: emailInput.value,\n      password: passwordInput.value\n    };\n    const formatData = new URLSearchParams(Object.entries(jsonData));\n    const data = await postData(`${SOCKET_ADDRESS}${APP_PATHS.login}`, formatData.toString());\n    console.log(data);\n\n    if (data !== \"{}\") {\n      // set user here\n      history.push(APP_PATHS.home);\n    } else {\n      alert(\"Login failed!\");\n    }\n  };\n\n  const handleInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login-page\",\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"login-email\",\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        label: \"Email\",\n        required: true,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"login-pass\",\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        label: \"Password\",\n        required: true,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"iUGgZKZ+GlXZLC5O1Vs5jT4+CHs=\");\n\n_c = LoginPage;\nexport default _c3 = withoutLogin(_c2 = withRouter(LoginPage));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"%default%$withoutLogin\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/lbasiu/Documents/Repos/developers-hub-frontend/src/pages/login/login.page.jsx"],"names":["React","useState","useContext","FormInput","UserContext","Button","withRouter","APP_PATHS","SOCKET_ADDRESS","withoutLogin","LoginPage","history","currentUser","user","formData","setFormData","email","password","postData","url","data","response","fetch","method","headers","body","responseData","text","setCurrentUser","handleSubmit","event","preventDefault","emailInput","document","querySelector","passwordInput","jsonData","value","formatData","URLSearchParams","Object","entries","login","toString","console","log","push","home","alert","handleInput","name","target"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport FormInput from \"../../components/form-input/form-input.component.jsx\";\nimport UserContext from \"../../context/user.context.js\";\nimport Button from \"../../components/button/button.component.jsx\";\nimport { withRouter } from \"react-router-dom\";\nimport APP_PATHS from \"../../APP_PATHS.js\";\nimport { SOCKET_ADDRESS } from \"../../APP_CONFIG.js\";\nimport withoutLogin from \"../../HOCs/without-login.hoc.js\";\n\nconst LoginPage = ({ history, currentUser: user }) => {\n  //if (user) history.push(APP_PATHS.home);\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  async function postData(url = '', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: data // body data type must match \"Content-Type\" header\n    });\n    const responseData = await response.text(); // parses JSON response into native JavaScript objects\n    return responseData;\n  }\n\n  const [currentUser, setCurrentUser] = useState(user);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const emailInput = document.querySelector(\"#login-email\");\n    const passwordInput = document.querySelector(\"#login-pass\");\n\n    const jsonData = {email: emailInput.value, password: passwordInput.value};\n\n    const formatData = new URLSearchParams(Object.entries(jsonData));\n\n    const data = await postData(`${SOCKET_ADDRESS}${APP_PATHS.login}`, formatData.toString());\n    console.log(data);\n    if (data !== \"{}\") {\n      // set user here\n      history.push(APP_PATHS.home);\n    } else {\n      alert(\"Login failed!\");\n    }\n  };\n\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  return (\n    <div id=\"login-page\" className=\"page\">\n      <form\n        id=\"login-form\"\n        onSubmit={handleSubmit}>\n        <FormInput\n          id=\"login-email\"\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          label=\"Email\"\n          required\n          onChange={handleInput} />\n        <br/>\n        <FormInput\n          id=\"login-pass\"\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          label=\"Password\"\n          required\n          onChange={handleInput} />\n        <br />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default withoutLogin(withRouter(LoginPage));\n"]},"metadata":{},"sourceType":"module"}